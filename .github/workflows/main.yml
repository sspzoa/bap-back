name: CI/CD Minikube

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}
  VERSION: ${{ github.sha }}
  NAME: ${{ github.repository_id }}

jobs:
  build:
    name: Build & Push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build
    name: Deploy to Minikube
    runs-on: [ self-hosted, label-go ]
    steps:
      - uses: actions/checkout@v4

      - name: Set Docker environment for Minikube
        run: |
          minikube start --driver=docker || true
          eval $(minikube docker-env)

      - name: Pull Docker Image
        run: |
          docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.GHCR_TOKEN }}
          docker pull ${{ env.DOCKER_IMAGE }}:latest

      - name: Deploy Application to Minikube
        run: |
          kubectl delete deployment/${{ env.NAME }} --ignore-not-found=true
          kubectl delete service/${{ env.NAME }}-service --ignore-not-found=true

          kubectl create deployment ${{ env.NAME }} --image=${{ env.DOCKER_IMAGE }}:latest
          kubectl expose deployment ${{ env.NAME }} --type=NodePort --port=3000 --name=${{ env.NAME }}-service
      
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/${{ env.NAME }}
          minikube service ${{ env.NAME }}-service --url
